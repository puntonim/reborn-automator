# Serverless version 4.4.7.

# Docs:
#  - Serverless for AWS full specs: https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/
#  - Python reqs: https://github.com/UnitedIncome/serverless-python-requirements
#  - IAM: https://www.serverless.com/framework/docs/providers/aws/guide/iam
#  - IAM Roles Per Function: https://www.serverless.com/plugins/serverless-iam-roles-per-function

# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: nimiq
service: reborn-automator


provider:
  name: aws
  runtime: python3.12
  region: eu-south-1
  stage: production # Default stage to be used. If omitted the default is `dev`. Override with `sls deploy --stage production`.
  memorySize: 256 # Default is 1024.
  timeout: 10 # Default is 6 seconds. Note: API Gateway current maximum is 30 seconds.
  logRetentionInDays: 90 # Set the default RetentionInDays for a CloudWatch LogGroup. Default is never expire.
  environment: # Env vars. Use it also for secrets and config to override those in `settings_default.toml`.
    # Note: they do NOT need a prefix.
    # Note: it's better to store all secrets here rather than nested under `functions:`
    #  so they are available to all Lambdas and to the `/settings` introspection endpoint.
    # Some are from ssm Parameter Store: https://www.serverless.com/framework/docs/providers/aws/guide/variables#reference-variables-using-the-ssm-parameter-store
    #
    # Credentials used in Reborn mobile app.
    REBORN_CREDS_USERNAME: ${env:REBORN_CREDS_USERNAME, ssm:/reborn-automator/${opt:stage, self:provider.stage}/reborn-creds-username, ssm:/reborn-automator/production/reborn-creds-username, 'XXX'}
    REBORN_CREDS_PASSWORD: ${env:REBORN_CREDS_PASSWORD, ssm:/reborn-automator/${opt:stage, self:provider.stage}/reborn-creds-password, ssm:/reborn-automator/production/reborn-creds-password, 'XXX'}
    # Botte project (in patatrack monorepo) token to be used to authentic with its
    #  HTTP interface (it's the env var API_AUTHORIZER_TOKEN in Botte).
    BOTTE_AUTH_TOKEN: ${env:BOTTE_AUTH_TOKEN, ssm:/patatrack-botte/prod/api-authorizer-token, 'XXX'}

  tags: # CloudFormation tags to apply to APIs and functions.
    project: ${self:service}
    environment: ${sls:stage}
    managed-with: Serverless framework
    source: ${self:custom.source}
  stackTags: ${self:provider.tags} # CloudFormation tags to apply to the stack.
  deploymentBucket:
    blockPublicAccess: true # Prevent public access via ACLs or bucket policies. Default is false.
    tags: ${self:provider.tags} # Tags to add to each of the deployment resources.
  layers:
    # The order of layers matters as they override each other's common files.
    # So keep you actual requirements layer as the last layer in the list,
    #  but right before the vendored layer, if you have any.
    #
    # Powertools for AWS Lambda (Python): https://docs.powertools.aws.dev/lambda/python/latest/#install.
    - arn:aws:lambda:eu-south-1:017000801446:layer:AWSLambdaPowertoolsPythonV3-python312-x86_64:2
    # All requirements packaged by `serverless-python-requirements` plugin.
    - Ref: PythonRequirementsLambdaLayer


functions:
  endpoint-introspection:
    handler: reborn_automator.views.endpoint_introspection_view.lambda_handler
    timeout: 5 # Note: API Gateway current maximum is 29 seconds.
    maximumRetryAttempts: 0
    events:
      - httpApi:
          path: /version
          method: GET
      - httpApi:
          path: /health
          method: GET
      - httpApi:
          path: /unhealth
          method: GET
    iamRoleStatements: []

  cron-book-class:
    handler: reborn_automator.views.cron_book_class_view.lambda_handler
    timeout: 28 # Note: API Gateway current maximum is 29 seconds.
    maximumRetryAttempts: 0
    events:
      # Cron expressions:
      #  - https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-scheduled-rule-pattern.html
      #  - https://www.serverless.com/framework/docs/providers/aws/events/schedule
      - schedule:
          rate:
            - cron(10 19 ? * MON *) # Every Monday at 19:10 UTC (20:10/21:10AM in Rome winter/summer).
            - cron(10 19 ? * WED *) # Every Wednesday at 19:10 UTC (20:10/21:10AM in Rome winter/summer).
    iamRoleStatements: []


package:
  # Individually should only be used for a project with multiple modules each with their own specific dependencies.
  #  Docs: https://www.serverless.com/plugins/serverless-python-requirements#per-function-requirements
  individually: false
  patterns: # Specify the directories and files which should be included in the deployment package. Order matters.
    - "!**"
    - reborn_automator/**
    - "!**/__pycache__/**"
    - pyproject.toml
    - serverless.yml


custom:
  # Constants.
  source: https://github.com/puntonim/reborn-automator/blob/main/serverless.yml

  # Plugin: serverless-python-requirements.
  pythonRequirements:
    # With the layer option, a new layer is created with the naming convention ${self:service}-${sls:stage}-python-requirements.
    layer: true
    # Strip the .so files, remove __pycache__, etc. See: https://www.serverless.com/plugins/serverless-python-requirements.
    slim: true
    # When deploying from local dev machine, it's important to disable useStaticCache, useDownloadCache and pip cache
    #  in order to ensure that local libs (like `events`) are always rebuilt.
    useStaticCache: false
    useDownloadCache: false
    pipCmdExtraArgs: ["--no-cache-dir"]


plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function


# Raw CloudFormation template syntax, in YAML.
# Docs: https://www.serverless.com/framework/docs/providers/aws/guide/resources.
resources:
  # Set the description in the CloudFormation stack.
  Description: Managed by Serverless at ${self:custom.source}
